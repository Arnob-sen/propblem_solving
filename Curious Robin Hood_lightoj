// Add some code
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MAXN = 100000005;
vector<bool> p(MAXN, false);
// vector<ll> dp;
vector<ll> seg;
vector<ll> arr;

#define fastio                            \
    {                                     \
        ios_base::sync_with_stdio(false); \
        cin.tie(NULL);                    \
    }
    void update1(ll node,ll b,ll e,ll i,ll val)
{

    if(i<b||i>e)return;
    if(b>=i&&e<=i){
        seg[node]=val;
        return ;
    }
    ll mid=(b+e)/2;
    update1(node*2,b,mid,i,val);
    update1(node*2+1,mid+1,e,i,val);
    seg[node]=seg[node*2]+seg[2*node+1];
}

void update(ll node,ll b,ll e,ll i,ll val)
{

    if(i<b||i>e)return;
    if(b>=i&&e<=i){
        seg[node]=seg[node]+val;
        return ;
    }
    ll mid=(b+e)/2;
    update(node*2,b,mid,i,val);
    update(node*2+1,mid+1,e,i,val);
    seg[node]=seg[node*2]+seg[2*node+1];
}
void make(ll node, ll b, ll e)
{
    if (b == e)
    {
        seg[node] = arr[b];
        return;
    }
    int mid = (b + e) / 2;
    make(2 * node, b, mid);
    make(2 * node + 1, mid + 1, e);

    seg[node] = (seg[2 * node]+ seg[2 * node + 1]);
}
ll query1(ll node, ll b, ll e, ll l, ll r)
{
    if (r < b || l > e)
        return 0;
    if (b >= l && e <= r)
        return seg[node];
    ll mid = (b + e) / 2;
    ll left = query1(2 * node, b, mid, l, r);
    ll right = query1(2 * node + 1, mid + 1, e, l, r);
    return (left + right);
}
ll query2(ll node, ll b, ll e, ll x)
{
    if (x < b || x > e)
        return 0;
    if (b >= x && e <= x)
        return seg[node];
    ll mid = (b + e) / 2;
    ll left = query2(2 * node, b, mid, x);
    ll right = query2(2 * node + 1, mid + 1, e, x);
    return (left + right);
}
int main()
{
    fastio
        ll t,
        i = 0;
    cin >> t;
    while (t--)
    {
        ll n, m;

        //  cout << "\n";
        cin >> n >> m;
        //   ll arr[4*n];
        arr.assign(n + 2, 0);
        seg.assign(4 * n + 2, 0);

        for (ll i = 1; i <= n; i++)
            cin >> arr[i];

        make(1, 1, n);
        cout << "Case " << ++i << ":\n";
        while (m--)
        {
            ll a;
            cin >> a;
            if(a==3){
                    ll x,y;
            cin>>x>>y;
            cout << query1(1, 1, n, x+1, y+1) << endl;
            }
            if(a==2){
                ll x,y;
                cin>>x>>y;
                update(1,1,n,x+1,y);
            }
            if(a==1){
                ll x;
                cin>>x;
                cout<<query2(1,1,n,x+1)<<endl;
                update1(1,1,n,x+1,0);
            }
        }
        //  for (ll i = 1; i < 4 * n && seg[i] != 0; i++)
        // cout << seg[i] << " ";
    }
}
