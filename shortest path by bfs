#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main() {
    
    ll node,edge;
    cin>>node>>edge;
    vector<ll>list[100];
    ll source,distinetion;
    cin>>source>>distinetion;
    for(ll i=1;i<=edge;i++){
        ll x,y;
        cin>>x>>y;
        list[x].push_back(y);
        list[y].push_back(x);

    }
    queue<ll>q;
    vector<bool>used(10);
    vector<ll>d(10),p(10);//p  mane parent,d mane depth
    q.push(source);//jeta theke suru oitay duklm
    p[source]=-1;
    used[source]=true;//j  j node use korbo ogula true kore rklm

    while(!q.empty()){
        ll v=q.front();
        q.pop();
        for(ll u:list[v]){// j j node gula connected segula visit korbe,and segular depth barbae and queue ta dukabe
            if(!used[u]){
                used[u]=true;// jegula visit krsi ogula true kore rklm
                q.push(u);// oi visited node gula queue ta dukaisi jeta ekn source hisabe use krbe
                d[u]=d[v]+1; //ager j depth cilo tar sate 1+ krlm.jmn 1 the 2 ta jawar por 2 er depth 0+1 hbe
                p[u]=v;//child parent hbe.jmn ekn eto smy 1 er jonno hisab hoisa.ekn 2 er jnnno hbe 
               //  if(used[distinetion]==true)break;//jdi distination node visit kore feli ar check r dorkr nay(jodi dorkr lage)
            
            }
           
          

        }
   
        
    }
    if(used[distinetion]==false)cout<<"NO path\n";
    else 
         cout<<d[distinetion]<<endl;//shortest path
    
}
