#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define MAXN 1000000
vector<vector<ll>> adjList(MAXN);
vector<bool> vis(MAXN, false);
vector<ll> d(MAXN), p(MAXN);
queue<ll> q;
ll type[MAXN]={0};
vector<ll> ans;
ll n, m,t;
bool ok=false;
void bfs(ll node)

{
    if(vis[node])return;
    vis[node]=1;
    q.push(node);
    type[node]=1;
    
    while(!q.empty())
    {
        ll v=q.front();
        q.pop();
        for(auto u:adjList[v]){
            if(type[u]==type[v]){
                ok=1;
                break;
            
        }
        if(!vis[u]){
            vis[u]=true;
        
        if(type[v]==1)type[u]=2;
        if(type[v]==2)type[u]=1;
        q.push(u);
        }
        
    }
    
    
}
}
int main()
{
    
    cin >> n >> m;
    ll c = 0;
    for (ll i = 0; i < m; i++)
    {
        ll u, v;
        cin >> u >> v;
        adjList[u].push_back(v);
        adjList[v].push_back(u);
    }
    
    for(ll i=1;i<=n;i++)
    {
        if(!vis[i])bfs(i);
    }
    if(ok)cout<<"IMPOSSIBLE\n";
    else {
        for(ll i=1;i<=n;i++)cout<<type[i]<<" ";
        
    }
    

}
